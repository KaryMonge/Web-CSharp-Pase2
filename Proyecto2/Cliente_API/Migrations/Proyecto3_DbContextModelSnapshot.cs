// <auto-generated />
using Cliente_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClienteAPI.Migrations
{
    [DbContext(typeof(Proyecto3_DbContext))]
    partial class Proyecto3DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cliente_API.Models.Cliente", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Anio_Nacimiento")
                        .HasColumnType("int");

                    b.Property<string>("Lista_recomendado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profesion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Cliente_API.Models.Factura", b =>
                {
                    b.Property<string>("Factura_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Lista_productos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lista_tours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio_Producto_con_iva")
                        .HasColumnType("real");

                    b.Property<float>("Precio_Producto_sin_iva")
                        .HasColumnType("real");

                    b.Property<float>("Precio_tour_con_iva")
                        .HasColumnType("real");

                    b.Property<float>("Precio_tour_sin_iva")
                        .HasColumnType("real");

                    b.Property<float>("Total_con_IVA")
                        .HasColumnType("real");

                    b.Property<float>("Total_sin_IVA")
                        .HasColumnType("real");

                    b.HasKey("Factura_ID");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("Cliente_API.Models.Producto", b =>
                {
                    b.Property<string>("Producto_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Anio_ingreso")
                        .HasColumnType("int");

                    b.Property<string>("Ced_juridica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<string>("Producto_Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Utilidad")
                        .HasColumnType("int");

                    b.HasKey("Producto_Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Cliente_API.Models.Proveedor", b =>
                {
                    b.Property<string>("Ced_juridica")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion_proveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ced_juridica");

                    b.ToTable("Provedores");
                });

            modelBuilder.Entity("Cliente_API.Models.Tour", b =>
                {
                    b.Property<string>("Tour_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ced_juridica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dias_disponibles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<string>("Tour_Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tour_Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Tour_Id");

                    b.ToTable("Tours");
                });
#pragma warning restore 612, 618
        }
    }
}
